.TH man 3 "16 March 2020" "0.01" "printf man page"
.SH NAME
.B printf
- print formatted.
.SH SYNOPSIS
#include <holberton.h> int printf(const char *format, ...);
.SH DESCRIPTION
The function printf() produces output according to a format as described below. The function printf() writes output to stdout, the standard output stream.
Upon successful return, it returns the number of characters printed (excluding the null byte used to end the output strings).
If an error is encountered, a negative value is returned.
.B Format of the format string
The format string is a character string, beginning and ending in its initial shift state, if any. The format string is composed of zero or more directives: ordinary characters (not %), which are copied unchanged to the output stream; and conversion specifications, each of which results in fetching zero or more subsequent arguments. Each conversion specification is introduced by the character %, and ends with a conversion specifier.
The arguments must correspond properly (after type promotion) with the conversion specifier. By default, the arguments are used in the order given, where each '*' and each conversion specifier asks for the next argument (and it is an error if insufficiently many arguments are given).
.B The flag characters
The character % is followed by the following conversion specifier flags:
.B c
The argument is converted into an unsigned char, and the resulting character is written.
.B s
The argument is expected to be a pointer to an array of character type (pointer to a string). The characters from the array are written up to (but not including) a terminal null byte.
.B %
A '%' is written. No argument is converted. The complete conversion specification is '%%'.
.B d, i
The arguement is converted into a signed decimal notation.
.SH OPTIONS
.B printf()
does not take any options.
.SH SEE ALSO
.I printf(3)
.SH BUGS
No known bugs.
.SH AUTHOR
Robert Rowe and Tristan Thrasher
